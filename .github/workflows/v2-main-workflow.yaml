name: Main workflow

on:
  push:
    branches:
      - main

jobs:
  tests-and-lints:
    uses: ./.github/workflows/tests-and-lints-template.yaml
    secrets:
      eth_rpc_url: ${{ secrets.ETH_RPC_URL }}
      app_id: ${{ secrets.APP_ID }}
      app_private_key: ${{ secrets.APP_PRIVATE_KEY }}

  check-release:
    uses: propeller-heads/ci-cd-templates/.github/workflows/release-v2.yaml@main
    with:
      args: --dry-run --no-ci
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    secrets:
      app_id: ${{ secrets.APP_ID }}
      app_private_key: ${{ secrets.APP_PRIVATE_KEY }}

  release:
    needs:
      - tests-and-lints
      - check-release
    if: needs.check-release.outputs.verify_release_version != ''
    uses: propeller-heads/ci-cd-templates/.github/workflows/release-v2.yaml@main
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    secrets:
      app_id: ${{ secrets.APP_ID }}
      app_private_key: ${{ secrets.APP_PRIVATE_KEY }}

  build-and-push-integration-test:
    needs:
      - release
    uses: propeller-heads/ci-cd-templates/.github/workflows/build-and-push-docker-image.yaml@main
    permissions:
      id-token: write
      contents: read
    with:
      image_tag: ${{ needs.release.outputs.next_release_version }}
      image_name: tycho-integration-test
      dockerfile_path: Dockerfile.integration-test
    secrets:
      app_id: ${{ secrets.APP_ID }}
      app_private_key: ${{ secrets.APP_PRIVATE_KEY }}
      role_to_assume: ${{ secrets.ROLE_TO_ASSUME }}
      aws_region: ${{ secrets.AWS_REGION }}
      repository_url: ${{ secrets.REPOSITORY_URL }}
      domain_owner: ${{ secrets.DOMAIN_OWNER }}
